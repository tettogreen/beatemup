using System.Collections; using System.Collections.Generic; using UnityEngine.Events; using UnityEngine;   public class TrigerOnCollision : MonoBehaviour { 	[SerializeField] TriggerType triggerType = TriggerType.collider; 	[SerializeField] List<Trigger> triggers;  	void OnCollisionEnter(Collision collision) 	{ 		if (triggerType == TriggerType.collider) 		{ 			InvokeTrigger(collision.collider.gameObject); 		} 	}  	void OnCollisionEnter2D(Collision2D collision) 	{ 		if (triggerType == TriggerType.collider) 		{ 			InvokeTrigger(collision.collider.gameObject); 		} 	}  	void OnTriggerEnter(Collider other) 	{ 		if (triggerType == TriggerType.trigger) 		{ 			InvokeTrigger(other.gameObject); 		} 	}  	void OnTriggerEnter2D(Collider2D other) 	{ 		if (triggerType == TriggerType.trigger) 		{ 			InvokeTrigger(other.gameObject); 		} 	}  	void InvokeTrigger(GameObject target) 	{ 		if (triggers == null || triggers.Count == 0) 		{ 			return; 		}  		foreach (var trigger in triggers) 		{ 			trigger.Invoke(target); 		} 	}  	[System.Serializable] 	class Trigger 	{ 		[SerializeField] public List<string> filterByTags;  		[SerializeField] public UnityEvent OnEnter;  		public void Invoke(GameObject target) 		{  			if (filterByTags != null && filterByTags.Count > 0) 			{ 				foreach (var tag in filterByTags) 				{ 					if (target.CompareTag(tag)) 					{ 						OnEnter.Invoke(); 						return; 					} 				} 			} else 			{ 				OnEnter.Invoke(); 			} 		} 	}  	private enum TriggerType 	{ 		trigger, 		collider 	} }